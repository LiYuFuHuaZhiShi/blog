<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.entity.Article" >
    <id column="aid" property="aid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="content_Id" property="contentId" jdbcType="INTEGER" />
    <result column="type_Id" property="typeId" jdbcType="INTEGER" />
    <result column="author_Id" property="authorId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    aid, title, time, content_Id, type_Id, author_Id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from article
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entity.Article" >
    insert into article (aid, title, time, 
      content_Id, type_Id, author_Id
      )
    values (#{aid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{contentId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        aid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="contentId != null" >
        content_Id,
      </if>
      <if test="typeId != null" >
        type_Id,
      </if>
      <if test="authorId != null" >
        author_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        #{authorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Article" >
    update article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="contentId != null" >
        content_Id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_Id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        author_Id = #{authorId,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      content_Id = #{contentId,jdbcType=INTEGER},
      type_Id = #{typeId,jdbcType=INTEGER},
      author_Id = #{authorId,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>

  <!--查询所有的文章的所有内容-->
  <select id="selectAllArticles" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    article
  </select>


  <resultMap id="art" type="Article">
    <id column="aid" property="aid"/>
    <result column="title" property="title"/>
    <result column="time" property="time"/>
    <result column="content_Id" property="contentId"/>
    <result column="type_Id" property="typeId"/>
    <result column="author_Id" property="authorId"/>
    <association property="thecontent" javaType="Content">
      <id column="conid" property="conid"/>
      <result column="content" property="content"/>
    </association>
  </resultMap>
  <!-- 按时间对文章查询 -->
  <select id="selectAllArticlesByTime" parameterType="String" resultMap="art">
    SELECT
    a.aid,
    a.title,
    a.time,
    a.content_Id,
    a.type_Id,
    a.author_Id,
    c.conid,
    c.content
    FROM
    article AS a
    INNER JOIN content AS c ON a.content_Id = c.conid
    WHERE
    a.time LIKE #{onetime}
  </select>


  <resultMap id="artAuthor" type="Article">
    <id column="aid" property="aid"/>
    <result column="title" property="title"/>
    <result column="author_Id" property="authorId"/>
    <association property="user" javaType="User">
      <id column="uid" property="uid"/>
      <result column="username" property="username"/>
    </association>
  </resultMap>
  <!-- 通过排序后返回的点击量列表查询相对应的文章 -->
  <select id="selectArticlesByClick" parameterType="Integer" resultMap="artAuthor">
    select
    a.aid,
    a.title,
    a.author_Id,
    u.uid,
    u.username
    from
    article As a
    INNER JOIN click AS cl ON cl.articleId = a.aid
    INNER JOIN user AS u ON u.uid = a.author_Id
    WHERE
    cl.click in
    <foreach collection="list" item="clickList" open="(" close=")" separator=",">
      #{clickList}
    </foreach>
  </select>


</mapper>